(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var CustomImage = exports.CustomImage = function () {
  function CustomImage(filepath) {
    var _this = this;

    _classCallCheck(this, CustomImage);

    this._image = new Image();
    this._image.onload = function () {
      _this._loaded = true;
    };
    this._image.src = filepath;
  }

  _createClass(CustomImage, [{
    key: "inBoundingBox",
    value: function inBoundingBox(x, y) {

      return x >= this.xPos && x <= this.xPos + this.width && y >= this.yPos && y <= this.yPos + this.height;
    }
  }, {
    key: "xPos",
    set: function set(xPos) {
      this._xpos = xPos;
    },
    get: function get() {
      return this._xpos;
    }
  }, {
    key: "yPos",
    set: function set(yPos) {
      this._ypos = yPos;
    },
    get: function get() {
      return this._ypos;
    }
  }, {
    key: "image",
    get: function get() {
      return this._image;
    }
  }, {
    key: "didload",
    get: function get() {
      return this._loaded;
    }
  }, {
    key: "width",
    get: function get() {
      return this._image.width;
    }
  }, {
    key: "height",
    get: function get() {
      return this._image.height;
    }
  }]);

  return CustomImage;
}();

},{}],2:[function(require,module,exports){
'use strict';

var _image = require('./customImage/image.js');

var backgroundCanvas = document.getElementById('background');
var dynamicCanvas = document.getElementById('dynamic');
var dynamicContext = dynamicCanvas.getContext('2d');
var backgroundContext = backgroundCanvas.getContext('2d');

backgroundCanvas.width = window.innerWidth;
backgroundCanvas.height = window.innerHeight;

dynamicCanvas.width = window.innerWidth;
dynamicCanvas.height = window.innerHeight;

var minuteHandDegree = 6;
var hourHandDegree = 0.5;

var minuteHandxPos;
var minuteHandyPos;
var hourHandxPos;
var hourHandyPos;
var midpoint;
var inleftQuadrant = false;
var inrightQuadrant = false;

var mousePositionX = 0;
var prevmousePositionX = -1;
var mousePositionY = 0;

var minuteHandAngle = 0;
var hourHandAngle = 0;
var angle = 0;
var movingAngle = 0;

var minutes = 0;
var prevDegrees = -1;
var prevMinutes = -1;
var hours = 12;
var someAngle = 0;

var reqFrame;
var hourcount = 0;

var images = {
  background: new _image.CustomImage("./assets/static/background.jpg"),
  wristWatch: new _image.CustomImage("./assets/static/clockresized.png"),
  minuteHand: new _image.CustomImage("./assets/dynamic/hands/minutehandresized.png"),
  hourHand: new _image.CustomImage("./assets/dynamic/hands/hourhandresized.png"),
  clockBtn: new _image.CustomImage("./assets/static/clockbtnresized.png"),
  upArrow: new _image.CustomImage("./assets/static/upArrow.png"),
  downArrow: new _image.CustomImage("./assets/static/downArrow.png"),
  digitalWatch: new _image.CustomImage("./assets/static/digital_times_resized.png")
};

var imageloadObserver;

function checkIfloaded() {
  var imagesLoaded = 0;
  var numImages = 0;

  for (var image in images) {
    numImages++;
  }

  for (var image in images) {
    if (images[image].didload) {

      imagesLoaded++;
    }
  }
  if (imagesLoaded >= numImages) {

    clearInterval(imageloadObserver);
    setParameters();
  }
}

function setParameters() {

  images.background.xPos = 0;
  images.background.yPos = 0;
  images.wristWatch.xPos = backgroundCanvas.width / 4 - images.wristWatch.width;
  images.wristWatch.yPos = backgroundCanvas.height / 4;
  images.minuteHand.xPos = images.wristWatch.xPos + images.wristWatch.width / 2 - images.minuteHand.width / 2;
  images.minuteHand.yPos = dynamicCanvas.height / 4 + images.wristWatch.height / 2 - images.minuteHand.height;
  images.hourHand.xPos = images.wristWatch.xPos + images.wristWatch.width / 2 - images.hourHand.width / 2;
  images.hourHand.yPos = images.wristWatch.yPos + images.wristWatch.height / 2 - images.hourHand.height;
  images.clockBtn.xPos = images.wristWatch.xPos + images.wristWatch.width;
  images.clockBtn.yPos = images.wristWatch.height / 2 + images.wristWatch.yPos - images.clockBtn.height / 2;
  images.digitalWatch.xPos = backgroundCanvas.width * 3 / 4 - images.digitalWatch.width;
  images.digitalWatch.yPos = images.wristWatch.height / 2 + backgroundCanvas.height / 4 - images.digitalWatch.height / 2;
  images.upArrow.xPos = images.clockBtn.xPos;
  images.upArrow.yPos = images.clockBtn.yPos - images.upArrow.height;
  images.downArrow.xPos = images.clockBtn.xPos;
  images.downArrow.yPos = images.clockBtn.yPos + images.clockBtn.height;

  hourHandxPos = images.digitalWatch.xPos + images.digitalWatch.width / 8;
  hourHandyPos = images.digitalWatch.yPos + images.digitalWatch.height / 2;
  minuteHandxPos = hourHandxPos + images.digitalWatch.width * 3 / 8;
  minuteHandyPos = hourHandyPos;

  backgroundContext.drawImage(images.background.image, images.background.xPos, images.background.yPos);
  backgroundContext.drawImage(images.wristWatch.image, images.wristWatch.xPos, images.wristWatch.yPos);
  backgroundContext.drawImage(images.clockBtn.image, images.clockBtn.xPos, images.clockBtn.yPos);
  backgroundContext.drawImage(images.digitalWatch.image, images.digitalWatch.xPos, images.digitalWatch.yPos);
  backgroundContext.drawImage(images.upArrow.image, images.upArrow.xPos, images.upArrow.yPos);
  backgroundContext.drawImage(images.downArrow.image, images.downArrow.xPos, images.downArrow.yPos);
  dynamicContext.drawImage(images.minuteHand.image, images.minuteHand.xPos, images.minuteHand.yPos);
  dynamicContext.drawImage(images.hourHand.image, images.minuteHand.xPos, images.hourHand.yPos);
  dynamicContext.font = '50pt verdana, sans-serif';
  dynamicContext.fillStyle = "#FFFFFF";
  backgroundContext.font = dynamicContext.font;
  backgroundContext.fillStyle = dynamicContext.fillStyle;
  dynamicContext.fillText("12", hourHandxPos, hourHandyPos);
  backgroundContext.fillText(":", hourHandxPos + 2 * images.digitalWatch.width / 8, hourHandyPos - 5);
  dynamicContext.fillText("00", minuteHandxPos, minuteHandyPos);
  setListeners();
}

function setListeners() {

  dynamicCanvas.addEventListener("click", function () {
    console.log("mouse click x is: " + event.clientX);
    console.log("mouse click y is: " + event.clientY);
    // console.log("x pos of minutehand is :" + (images.minuteHand.xPos));
    // console.log("y pos of minutehand is: " + (images.minuteHand.yPos + images.minuteHand.height));
  });

  dynamicCanvas.addEventListener("mousedown", function () {

    if (images.hourHand.inBoundingBox(event.clientX, event.clientY)) {
      dynamicCanvas.onmousemove = function () {
        mousePositionX = event.clientX;
        mousePositionY = event.clientY;

        reqFrame = window.requestAnimationFrame(hourhand);
      };
    } else if (images.minuteHand.inBoundingBox(event.clientX, event.clientY)) {
      dynamicCanvas.onmousemove = function () {
        mousePositionX = event.clientX;
        mousePositionY = event.clientY;

        reqFrame = window.requestAnimationFrame(minuteHand);
      };
    }
  });

  dynamicCanvas.addEventListener("mouseup", function () {
    window.cancelAnimationFrame(reqFrame);
    dynamicCanvas.onmousemove = null;
  });
}

function rotateImage(angle, translateXpos, translateYpos, imageObj) {
  dynamicContext.save();
  dynamicContext.translate(translateXpos, translateYpos);
  dynamicContext.rotate(angle);
  dynamicContext.translate(-translateXpos, -translateYpos);
  dynamicContext.drawImage(imageObj.image, imageObj.xPos, imageObj.yPos);
  dynamicContext.restore();
  console.log("image new xpos is :" + ((imageObj.xPos + imageObj.width / 2) * -Math.cos(angle) - (imageObj.yPos + imageObj.height) * -Math.sin(angle)));
  console.log("image new ypos is :" + (imageObj.yPos + imageObj.height * Math.sin(angle)));
}

function minuteHand() {
  var dx = mousePositionX - (images.minuteHand.xPos + images.minuteHand.width / 2);
  var dy = mousePositionY - (images.minuteHand.yPos + images.minuteHand.height);
  angle = Math.atan2(dy, dx) + 1.5708;
  var degrees = Math.floor(angle * 57.2958);
  degrees = degrees < 0 ? 360 + degrees : degrees;

  if (degrees <= 90 || degrees >= 270) {
    if (degrees >= 270 && degrees < 360) {
      inleftQuadrant = true;
      if (inrightQuadrant) {
        hourcount--;
        inrightQuadrant = false;
        minutes = 59;
      }
    }

    if (degrees >= 0 && degrees <= 90) {
      inrightQuadrant = true;
      if (inleftQuadrant) {

        hourcount++;
        inleftQuadrant = false;
      }
    }
  } else {
    inrightQuadrant = false;
    inleftQuadrant = false;
  }
  hours = hourcount;

  hourHandAngle = (hourcount * 30 + Math.floor(degrees / 6 * 0.5)) * (Math.PI / 180);

  //Update hour hand because a minute has passed. A minute is 6 degrees.
  if (degrees % 6 == 0) {
    var minutesPassed = minutes;
    minutes = degrees / 6;
  }

  dynamicContext.clearRect(0, 0, dynamicCanvas.width, dynamicCanvas.height);
  rotateImage(angle, images.minuteHand.xPos + images.minuteHand.width / 2, images.minuteHand.yPos + images.minuteHand.height, images.minuteHand);
  rotateImage(hourHandAngle, images.hourHand.xPos + images.hourHand.width / 2, images.hourHand.yPos + images.hourHand.height, images.hourHand);

  hours = hours % 12;

  if (hours == 0) {
    hours = 12;
  }
  dynamicContext.fillText(padInput(hours), hourHandxPos, hourHandyPos);
  dynamicContext.fillText(padInput(minutes), minuteHandxPos, minuteHandyPos);
}

function hourhand() {
  var dx = mousePositionX - (images.hourHand.xPos + images.hourHand.width / 2);
  var dy = mousePositionY - (images.hourHand.yPos + images.hourHand.height);

  angle = Math.atan2(dy, dx) + 1.5708;
  console.log("angle is : " + angle);
  var degrees = Math.round(angle * 57.2958 * 10) / 10;
  degrees = degrees < 0 ? 360 + degrees : degrees;
  var minutehandmovement = degrees / 0.5 * 6 * (Math.PI / 180);

  minutes = Math.floor(degrees / 0.5 % 60);
  hours = Math.floor(degrees / 30);
  correctHour();
  console.log("hours : " + hours);

  dynamicContext.clearRect(0, 0, dynamicCanvas.width, dynamicCanvas.height);
  rotateImage(minutehandmovement, images.minuteHand.xPos + images.minuteHand.width / 2, images.minuteHand.yPos + images.minuteHand.height, images.minuteHand);
  rotateImage(angle, images.hourHand.xPos + images.hourHand.width / 2, images.hourHand.yPos + images.hourHand.height, images.hourHand);
  dynamicContext.fillText(padInput(hours), hourHandxPos, hourHandyPos);
  dynamicContext.fillText(padInput(minutes), minuteHandxPos, minuteHandyPos);
}

function correctHour() {
  hours = hours % 12;
  if (hours == 0) {
    hours = 12;
  }
}

function padInput(number) {
  return number < 10 ? "0" + number : number.toString();
}

imageloadObserver = window.setInterval(checkIfloaded, 400);

},{"./customImage/image.js":1}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
